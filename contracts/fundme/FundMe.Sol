// SPDX-License-Identifier: MIT
pragma solidity >=0.4.24 <0.9.0;

contract FundMe {

  // constructor is called when the contract is created
  // it is called with the same arguments as the contract
  constructor(){ }

  // dictionary of addresses to uint256
  mapping (address => uint256) public balances;

  // to make a function payable, we need to add the payable modifier
  function fund() public payable{
    // require at least 1 ether to be sent = 1e18 is equal to 1 * 10 ** 18
    // we also can return a message if the transaction is not successful
    require(msg.value >= 1e18, "You need to send at least 1 ether");

    // What is reverting? 
    // undo any action before, and send remaining ether back to the sender
  }

  function getConversionRate() public {}

  function getPrice() public { }
 
  function withdraw()public {}
}
